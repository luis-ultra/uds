@use '../config';
@use '../../design-system/nebula/scss/tokens.scss';

@mixin declare-font-faces() {
  $fonts-assets: (
    ('Roboto Mono', 'RobotoMono-Regular.ttf', 'truetype'),
    ('Ultra Brand', 'Ultra_Brand_Font.otf', 'opentype'),
    ('Ultra Icons', 'UltraIcons-VF.ttf', 'truetype'),
    ('Ultra Work Sans Italic', 'UltraWorkSans-Italic-VariableFont_wght.ttf', 'truetype'),
    ('Ultra Work Sans', 'UltraWorkSans-VariableFont_wght.ttf', 'truetype')
  );

  @each $font-name, $font-file, $font-type in $fonts-assets {
    @font-face {
      font-family: $font-name;
      src: url('./fonts/#{$font-file}') format($font-type);
    }
  }
}

// Typography font utilities
@mixin create-typography-classes() {
  @each $family-key, $family-value in map-get(tokens.$tokens, 'typography', 'font', 'family') {
    @each $weight-key, $weight-value in map-get(tokens.$tokens, 'typography', 'font', 'weight') {
      .typography-#{$family-key}-#{$weight-key} {
        @include typography($family-key, $weight-key);
      }
    }
  }
}

@mixin typography($font-family, $font-weight) {
  font-family: map-get(tokens.$tokens, 'typography', 'font', 'family', $font-family);
  line-height: map-get(tokens.$tokens, 'typography', 'font', 'line-height', $font-family);
  font-size: map-get(tokens.$tokens, 'typography', 'font', 'size', $font-family);
  letter-spacing: map-get(tokens.$tokens, 'typography', 'font', 'letter-spacing', $font-family);
  font-weight: map-get(tokens.$tokens, 'typography', 'font', 'weight', $font-weight);

  // todo: add variants for different screen sizes
}
